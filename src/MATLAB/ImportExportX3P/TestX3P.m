%
%  Copyright by Dr. Georg Wiora (NanoFocus AG) 2008
%
%  This file is part of the openGPS(R)[TM] software library.
%
%  This program is free software; you can redistribute it and/or modify
%  it under the terms of the GNU Lesser General Public License (LGPL)
%  as published by the Free Software Foundation; either version 3 of
%  the License, or (at your option) any later version.
%  for detail see the files "licence_LGPL-3.0.txt" and
%  "licence_GPL-3.0.txt".
%
%  openGPS is distributed in the hope that it will be useful,
%  but WITHOUT ANY WARRANTY; without even the implied warranty of
%  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%  GNU Lesser General Public License for more details.
%
%  You should have received a copy of the GNU General Public License
%  along with this program.  If not, see <http://www.gnu.org/licenses/>.
%
%  The name "openGPS" and the logo are registered as 
%  European trade mark No. 006178354 for
%  Physikalisch Technische Bundesanstalt (PTB)
%  http://www.ptb.de/
%
%  More information about openGPS can be found at
%  http://www.opengps.eu/


function TestX3P()
% TestX3P: Test the x3p integration
%   Read all demo files and display its contents and file information

  % Close windows from last run
  close all hidden;
  
  % List of test sample files and files generated by demo programm
  testfiles={ ...
    'ISO5436-sample1.x3p', ...
    'ISO5436-sample1_bin.x3p',...
    'ISO5436-sample2.x3p',...
    'ISO5436-sample3.x3p',...
    'ISO5436-sample4.x3p',...
    'ISO5436-sample4_bin.x3p',...
    'medium.x3p',...
    'performance_double.x3p',...
    'performance_double_bin.x3p',...
    'performance_int16.x3p',...
    'performance_int16_bin.x3p',...
    'simple.x3p'};
  
  % Test all files
  for i=1:numel(testfiles)
    disp(' ');
    disp('****************************************************');
    disp(['Reading x3p file "',testfiles{i},'"...']);
    [z,x,y,pinfo,meta] = openX3P(testfiles{i});
    
    % Test write
    pinfo = writeX3P(['w_',testfiles{i}],x,y,z,meta);
    
    % Print point info
    pinfo
    % Get dimensions and extend to 3
    dims = [size(z),1,1];
    dims = dims(1:3);
    fprintf(1,'Data dimensions: double(%d,%d,%d)\n',dims);
    % enough data for a plot?
    if dims(1) > 1
      for layer=1:dims(3)
        % Check for data organization
        % Plot data for all layers
        figure('name',testfiles{i});

        % check for list type data
        if pinfo.IsList
          % List type data are independet points without topologic 
          % neighbourship
          plot3(x,y,z,'+');
        else
          % Matrix type data can be ploted as surface or profile
          % Is a surface profile?
          if strcmp(pinfo.FeatureType,'SUR')
            % This is a matrix plot it layer by layer
            hold all;
            surface(x(:,:,layer),y(:,:,layer),z(:,:,layer));
            hold off;
          elseif strcmp(pinfo.FeatureType,'PRF')
            % This is a a line profile
            plot(x,z);
          else
            warning('Unknown profile type, neither "PRF" nor "SUR"!')
          end
        end
      end
    else
        % Just print the data
        x
        y
        z
    end
    % Display meta information for this files
    meta
  end
end
